Parse Success!

-----------------

Schema {schema_elementFormDefault = Qualified, schema_attributeFormDefault = Unqualified, schema_finalDefault = Nothing, schema_blockDefault = Nothing, schema_targetNamespace = Just "http://www.omg.org/spec/DMN/20180521/DC/", schema_version = Nothing, schema_namespaces = [Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"},Namespace {nsPrefix = "dc", nsURI = "http://www.omg.org/spec/DMN/20180521/DC/"}], schema_items = [SchemaElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Left (NT {theName = "Color", theType = Just (N "Color")}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Left (NT {theName = "Point", theType = Just (N "Point")}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Left (NT {theName = "Bounds", theType = Just (N "Bounds")}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Left (NT {theName = "Dimension", theType = Just (N "Dimension")}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),Complex (ComplexType {complex_annotation = Documentation "Color is a data type that represents a color value in the RGB format.", complex_name = Just "Color", complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "red", theType = Just (N "rgb")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "green", theType = Just (N "rgb")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "blue", theType = Just (N "rgb")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}}),Simple (Restricted {simple_annotation = NoAnnotation "missing", simple_name = Just "rgb", simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "int"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = OrderedBoundsMinIncl, facet_annotation = NoAnnotation "missing", facet_facetValue = "0", facet_fixed = False},Facet {facet_facetType = OrderedBoundsMaxIncl, facet_annotation = NoAnnotation "missing", facet_facetValue = "255", facet_fixed = False}]}}),Complex (ComplexType {complex_annotation = Documentation "A Point specifies an location in some x-y coordinate system.", complex_name = Just "Point", complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "x", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "double")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "y", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "double")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}}),Complex (ComplexType {complex_annotation = Documentation "Dimension specifies two lengths (width and height) along the x and y axes in some x-y coordinate system.", complex_name = Just "Dimension", complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "width", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "double")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "height", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "double")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}}),Complex (ComplexType {complex_annotation = Documentation "Bounds specifies a rectangular area in some x-y coordinate system that is defined by a location (x and y) and a size (width and height).", complex_name = Just "Bounds", complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA Nothing [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "x", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "double")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "y", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "double")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "width", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "double")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "height", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "double")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing}}),Simple (Restricted {simple_annotation = Documentation "AlignmentKind enumerates the possible options for alignment for layout purposes.", simple_name = Just "AlignmentKind", simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "start", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "end", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = NoAnnotation "missing", facet_facetValue = "center", facet_fixed = False}]}}),Simple (Restricted {simple_annotation = Documentation "KnownColor is an enumeration of 17 known colors.", simple_name = Just "KnownColor", simple_final = Nothing, simple_restriction = RestrictType {restrict_annotation = NoAnnotation "missing", restrict_base = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string"), restrict_type = Nothing, restrict_facets = [Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #800000", facet_facetValue = "maroon", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #FF0000", facet_facetValue = "red", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #FFA500", facet_facetValue = "orange", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #FFFF00", facet_facetValue = "yellow", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #808000", facet_facetValue = "olive", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #800080", facet_facetValue = "purple", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #FF00FF", facet_facetValue = "fuchsia", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #FFFFFF", facet_facetValue = "white", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #00FF00", facet_facetValue = "lime", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #008000", facet_facetValue = "green", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #000080", facet_facetValue = "navy", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #0000FF", facet_facetValue = "blue", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #00FFFF", facet_facetValue = "aqua", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #008080", facet_facetValue = "teal", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #000000", facet_facetValue = "black", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #C0C0C0", facet_facetValue = "silver", facet_fixed = False},Facet {facet_facetType = UnorderedEnumeration, facet_annotation = Documentation "a color with a value of #808080", facet_facetValue = "gray", facet_fixed = False}]}})]}

-----------------

