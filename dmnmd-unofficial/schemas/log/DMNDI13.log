Parse Success!

-----------------

Schema {schema_elementFormDefault = Qualified, schema_attributeFormDefault = Unqualified, schema_finalDefault = Nothing, schema_blockDefault = Nothing, schema_targetNamespace = Just "https://www.omg.org/spec/DMN/20191111/DMNDI/", schema_version = Nothing, schema_namespaces = [Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"},Namespace {nsPrefix = "dmndi", nsURI = "https://www.omg.org/spec/DMN/20191111/DMNDI/"},Namespace {nsPrefix = "dc", nsURI = "http://www.omg.org/spec/DMN/20180521/DC/"},Namespace {nsPrefix = "di", nsURI = "http://www.omg.org/spec/DMN/20180521/DI/"}], schema_items = [Import "http://www.omg.org/spec/DMN/20180521/DC/" "DC.xsd" (NoAnnotation "missing"),Import "http://www.omg.org/spec/DMN/20180521/DI/" "DI.xsd" (NoAnnotation "missing"),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Left (NT {theName = "DMNDI", theType = Just (N "DMNDI")}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Left (NT {theName = "DMNDiagram", theType = Just (N "DMNDiagram")}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = Documentation "This element should never be instantiated directly, but rather concrete implementation should. It is placed there only to be referred in the sequence", elem_nameOrRef = Left (NT {theName = "DMNDiagramElement", theType = Just (QN (Namespace {nsPrefix = "di", nsURI = "http://www.omg.org/spec/DMN/20180521/DI/"}) "DiagramElement")}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Left (NT {theName = "DMNShape", theType = Just (N "DMNShape")}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Just (N "DMNDiagramElement"), elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Left (NT {theName = "DMNEdge", theType = Just (N "DMNEdge")}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Just (N "DMNDiagramElement"), elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Left (NT {theName = "DMNStyle", theType = Just (N "DMNStyle")}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Just (QN (Namespace {nsPrefix = "di", nsURI = "http://www.omg.org/spec/DMN/20180521/DI/"}) "Style"), elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Left (NT {theName = "DMNLabel", theType = Just (N "DMNLabel")}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),SchemaElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Left (NT {theName = "DMNDecisionServiceDividerLine", theType = Just (N "DMNDecisionServiceDividerLine")}), elem_occurs = Occurs Nothing Nothing, elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),Complex (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Just "DMNDI", complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ThisType {ci_thistype = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs Nothing Nothing) [HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "DMNDiagram"), elem_occurs = Occurs (Just 0) (Just 9223372036854775807), elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "DMNStyle"), elem_occurs = Occurs (Just 0) (Just 9223372036854775807), elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []})]))) [] Nothing}}),Complex (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Just "DMNDiagram", complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ComplexContent {ci_annotation = NoAnnotation "missing", ci_mixed = False, ci_stuff = Right (Extension {extension_annotation = NoAnnotation "missing", extension_base = QN (Namespace {nsPrefix = "di", nsURI = "http://www.omg.org/spec/DMN/20180521/DI/"}) "Diagram", extension_newstuff = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs Nothing Nothing) [HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Left (NT {theName = "Size", theType = Just (QN (Namespace {nsPrefix = "dc", nsURI = "http://www.omg.org/spec/DMN/20180521/DC/"}) "Dimension")}), elem_occurs = Occurs (Just 0) (Just 1), elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "DMNDiagramElement"), elem_occurs = Occurs (Just 0) (Just 9223372036854775807), elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []})]))) [] Nothing})}}),Complex (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Just "DMNShape", complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ComplexContent {ci_annotation = NoAnnotation "missing", ci_mixed = False, ci_stuff = Right (Extension {extension_annotation = NoAnnotation "missing", extension_base = QN (Namespace {nsPrefix = "di", nsURI = "http://www.omg.org/spec/DMN/20180521/DI/"}) "Shape", extension_newstuff = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs Nothing Nothing) [HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "DMNLabel"), elem_occurs = Occurs (Just 0) (Just 1), elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "DMNDecisionServiceDividerLine"), elem_occurs = Occurs (Just 0) (Just 1), elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "dmnElementRef", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "QName")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "isListedInputData", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "boolean")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "isCollapsed", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "boolean")}), attr_use = Optional, attr_defFixed = Just (Left "false"), attr_form = Unqualified, attr_simpleType = Nothing})] Nothing})}}),Complex (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Just "DMNDecisionServiceDividerLine", complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ComplexContent {ci_annotation = NoAnnotation "missing", ci_mixed = False, ci_stuff = Right (Extension {extension_annotation = NoAnnotation "missing", extension_base = QN (Namespace {nsPrefix = "di", nsURI = "http://www.omg.org/spec/DMN/20180521/DI/"}) "Edge", extension_newstuff = PA Nothing [] Nothing})}}),Complex (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Just "DMNEdge", complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ComplexContent {ci_annotation = NoAnnotation "missing", ci_mixed = False, ci_stuff = Right (Extension {extension_annotation = NoAnnotation "missing", extension_base = QN (Namespace {nsPrefix = "di", nsURI = "http://www.omg.org/spec/DMN/20180521/DI/"}) "Edge", extension_newstuff = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs Nothing Nothing) [HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Right (N "DMNLabel"), elem_occurs = Occurs (Just 0) (Just 1), elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "dmnElementRef", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "QName")}), attr_use = Required, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "sourceElement", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "QName")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "targetElement", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "QName")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing})}}),Complex (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Just "DMNLabel", complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ComplexContent {ci_annotation = NoAnnotation "missing", ci_mixed = False, ci_stuff = Right (Extension {extension_annotation = NoAnnotation "missing", extension_base = QN (Namespace {nsPrefix = "di", nsURI = "http://www.omg.org/spec/DMN/20180521/DI/"}) "Shape", extension_newstuff = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs Nothing Nothing) [HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Left (NT {theName = "Text", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), elem_occurs = Occurs (Just 0) (Just 1), elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []})]))) [] Nothing})}}),Complex (ComplexType {complex_annotation = NoAnnotation "missing", complex_name = Just "DMNStyle", complex_abstract = False, complex_final = Nothing, complex_block = Nothing, complex_mixed = False, complex_content = ComplexContent {ci_annotation = NoAnnotation "missing", ci_mixed = False, ci_stuff = Right (Extension {extension_annotation = NoAnnotation "missing", extension_base = QN (Namespace {nsPrefix = "di", nsURI = "http://www.omg.org/spec/DMN/20180521/DI/"}) "Style", extension_newstuff = PA (Just (Left (Sequence (NoAnnotation "missing") (Occurs Nothing Nothing) [HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Left (NT {theName = "FillColor", theType = Just (QN (Namespace {nsPrefix = "dc", nsURI = "http://www.omg.org/spec/DMN/20180521/DC/"}) "Color")}), elem_occurs = Occurs (Just 0) (Just 1), elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Left (NT {theName = "StrokeColor", theType = Just (QN (Namespace {nsPrefix = "dc", nsURI = "http://www.omg.org/spec/DMN/20180521/DC/"}) "Color")}), elem_occurs = Occurs (Just 0) (Just 1), elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []}),HasElement (ElementDecl {elem_annotation = NoAnnotation "missing", elem_nameOrRef = Left (NT {theName = "FontColor", theType = Just (QN (Namespace {nsPrefix = "dc", nsURI = "http://www.omg.org/spec/DMN/20180521/DC/"}) "Color")}), elem_occurs = Occurs (Just 0) (Just 1), elem_nillable = False, elem_substGroup = Nothing, elem_abstract = False, elem_final = Nothing, elem_block = Nothing, elem_form = Unqualified, elem_content = Nothing, elem_stuff = []})]))) [Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "fontFamily", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "string")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "fontSize", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "double")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "fontItalic", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "boolean")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "fontBold", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "boolean")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "fontUnderline", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "boolean")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "fontStrikeThrough", theType = Just (QN (Namespace {nsPrefix = "xsd", nsURI = "http://www.w3.org/2001/XMLSchema"}) "boolean")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "labelHorizontalAlignement", theType = Just (QN (Namespace {nsPrefix = "dc", nsURI = "http://www.omg.org/spec/DMN/20180521/DC/"}) "AlignmentKind")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing}),Left (AttributeDecl {attr_annotation = NoAnnotation "missing", attr_nameOrRef = Left (NT {theName = "labelVerticalAlignment", theType = Just (QN (Namespace {nsPrefix = "dc", nsURI = "http://www.omg.org/spec/DMN/20180521/DC/"}) "AlignmentKind")}), attr_use = Optional, attr_defFixed = Nothing, attr_form = Unqualified, attr_simpleType = Nothing})] Nothing})}})]}

-----------------

